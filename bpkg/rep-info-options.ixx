// -*- C++ -*-
//
// This file was generated by CLI, a command line interface
// compiler for C++.
//

// Begin prologue.
//
//
// End prologue.

namespace bpkg
{
  // rep_info_options
  //

  inline const bool& rep_info_options::
  name () const
  {
    return this->name_;
  }

  inline const bool& rep_info_options::
  cert_fingerprint () const
  {
    return this->cert_fingerprint_;
  }

  inline const bool& rep_info_options::
  cert_name () const
  {
    return this->cert_name_;
  }

  inline const bool& rep_info_options::
  cert_organization () const
  {
    return this->cert_organization_;
  }

  inline const bool& rep_info_options::
  cert_email () const
  {
    return this->cert_email_;
  }

  inline const bool& rep_info_options::
  repositories () const
  {
    return this->repositories_;
  }

  inline const bool& rep_info_options::
  packages () const
  {
    return this->packages_;
  }

  inline const bool& rep_info_options::
  manifest () const
  {
    return this->manifest_;
  }

  inline const bool& rep_info_options::
  ignore_unknown () const
  {
    return this->ignore_unknown_;
  }

  inline const bool& rep_info_options::
  deep () const
  {
    return this->deep_;
  }

  inline const path& rep_info_options::
  repositories_file () const
  {
    return this->repositories_file_;
  }

  inline bool rep_info_options::
  repositories_file_specified () const
  {
    return this->repositories_file_specified_;
  }

  inline const path& rep_info_options::
  packages_file () const
  {
    return this->packages_file_;
  }

  inline bool rep_info_options::
  packages_file_specified () const
  {
    return this->packages_file_specified_;
  }

  inline const repository_type& rep_info_options::
  type () const
  {
    return this->type_;
  }

  inline bool rep_info_options::
  type_specified () const
  {
    return this->type_specified_;
  }

  inline const string& rep_info_options::
  directory () const
  {
    return this->directory_;
  }

  inline bool rep_info_options::
  directory_specified () const
  {
    return this->directory_specified_;
  }
}

// Begin epilogue.
//
//
// End epilogue.
