// file      : bpkg/pkg-test.cli
// copyright : Copyright (c) 2014-2018 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

include <bpkg/configuration.cli>;

"\section=1"
"\name=bpkg-pkg-test"
"\summary=test package"

namespace bpkg
{
  {
    "<options> <vars> <pkg>",

    "\h|SYNOPSIS|

     \c{\b{bpkg pkg-test}|\b{test} [<options>] [<vars>] (<pkg> [<vars>])...\n
        \b{bpkg pkg-test}|\b{test} [<options>] [<vars>] \b{--all}|\b{-a}}

     \h|DESCRIPTION|

     The \cb{pkg-test} command tests the specified packages (the first form)
     or all the held packages (the second form, see \l{bpkg-pkg-status(1)}).
     Additionally, immediate or all dependencies of these packages can also be
     tested by specifying the \c{\b{--immediate}|\b{-i}} or
     \c{\b{--recursive}|\b{-r}} options, respectively. Underneath, this
     command doesn't do much more than run \cb{b test}.

     In the first form the specified packages must have been previously
     configured with \l{bpkg-pkg-build(1)} or \l{bpkg-pkg-configure(1)}.
     Additional command line variables (<vars>, normally \cb{config.*}) can be
     passed to the build system by either specifying them before the packages,
     in which case they apply to the whole configuration, or after a specific
     package, in which case they apply only to this package."
  }

  class pkg_test_options: configuration_options
  {
    "\h|PKG-TEST OPTIONS|"

    bool --all|-a
    {
      "Test all held packages."
    }

    bool --immediate|-i
    {
      "Also test immediate dependencies."
    }

    bool --recursive|-r
    {
      "Also test all dependencies, recursively."
    }
  };
}
