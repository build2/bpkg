// file      : bpkg/bpkg.cli
// copyright : Copyright (c) 2014-2016 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

include <bpkg/common.cli>;

"\section=1"
"\name=bpkg"
"\summary=build2 package manager"

namespace bpkg
{
  {
    "<command> <topic> <common-options> <command-options> <command-args>",

    "\h|SYNOPSIS|

     \cb{bpkg --help}\n
     \cb{bpkg --version}\n
     \c{\b{bpkg help} [<command> | <topic>]}\n
     \c{\b{bpkg} [<common-options>] <command> [<command-options>] <command-args>}

     \h|DESCRIPTION|

     @@ TODO Is this a good place to describe some general concepts, like
     configuration, repositories, packages?

     The example workflow would be:

     Note that the common options can also be specified as part of the
     command-specific options.

     For a detailed description of any command or help topic, use the \cb{help}
     command or see the corresponding man page (the man pages have the
     \cb{bpkg-} prefix, for example \l{bpkg-help(1)})."
  }

  class commands
  {
    "\h|COMMANDS|"

    //
    // NOTE: Use the same sentence as in the page's \summary and make
    // sure it is short enough to fit in one line in usage.
    //

    bool help
    {
      "[<topic>]",
      "\l{bpkg-help(1)} \- show help for a command or help topic",
      ""
    }

    bool cfg-create|create
    {
      "<dir>",
      "\l{bpkg-cfg-create(1)} \- create configuration",
      ""
    }

    bool cfg-add|add
    {
      "<rep>",
      "\l{bpkg-cfg-add(1)} \- add repository to configuration",
      ""
    }

    bool cfg-fetch|fetch
    {
      "\l{bpkg-cfg-fetch(1)} \- fetch list of available packages"
    }

    bool pkg-status|status
    {
      "\l{bpkg-pkg-status(1)} \- print package status"
    }

    bool pkg-build|build
    {
      "\l{bpkg-pkg-build(1)} \- build package"
    }

    bool pkg-drop|drop
    {
      "\l{bpkg-pkg-drop(1)} \- drop package"
    }

    bool pkg-install|install
    {
      "\l{bpkg-pkg-install(1)} \- install package"
    }

    bool pkg-uninstall|uninstall
    {
      "\l{bpkg-pkg-uninstall(1)} \- uninstall package"
    }

    bool pkg-update|update
    {
      "\l{bpkg-pkg-update(1)} \- update package"
    }

    bool pkg-test|test
    {
      "\l{bpkg-pkg-test(1)} \- test package"
    }

    bool pkg-clean|clean
    {
      "\l{bpkg-pkg-clean(1)} \- clean package"
    }

    bool pkg-verify
    {
      "<archive>",
      "\l{bpkg-pkg-verify(1)} \- verify package archive",
      ""
    }

    bool pkg-fetch
    {
      "<pkg>/<ver>",
      "\l{bpkg-pkg-fetch(1)} \- fetch package archive",
      ""
    }

    bool pkg-unpack
    {
      "\l{bpkg-pkg-unpack(1)} \- unpack package archive"
    }

    bool pkg-configure
    {
      "\l{bpkg-pkg-configure(1)} \- configure package"
    }

    bool pkg-disfigure
    {
      "\l{bpkg-pkg-disfigure(1)} \- disfigure package"
    }

    bool pkg-purge
    {
      "\l{bpkg-pkg-purge(1)} \- purge package"
    }

    bool rep-info
    {
      "\l{bpkg-rep-info(1)} \- print repository information"
    }

    bool rep-create
    {
      "[<dir>]",
      "\l{bpkg-rep-create(1)} \- create repository",
      ""
    }
  };

  // Make sure these don't conflict with command names above.
  //
  class topics
  {
    "\h|HELP TOPICS|"

    bool common-options
    {
      "\l{bpkg-common-options(1)} \- details on common options"
    }
  };

  class options: common_options
  {
    bool --help;
    bool --version;
  };
}
