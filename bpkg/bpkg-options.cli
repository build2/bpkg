// file      : bpkg/bpkg-options.cli
// copyright : Copyright (c) 2014-2015 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

include <bpkg/common-options.cli>;

"\section=1"
"\name=bpkg"
"\summary=build2 package manager"

namespace bpkg
{
  {
    "<command> <topic> <common-options> <command-options> <command-args>",

    "\h|SYNOPSIS|

     \cb{bpkg --help}\n
     \cb{bpkg --version}\n
     \c{\b{bpkg help} [<command>|<topic>]}\n
     \c{\b{bpkg} [<common-options>] <command> [<command-options>] <command-args>}

     \h|DESCRIPTION|

     @@ TODO

     Note that the common options can also be specified as part of the
     command-specific options."
  }

  class commands
  {
    "\h|COMMANDS|"

    bool help
    {
      "[<topic>]",
      "Show help for a command or help topic \- \l{bpkg-help(1)}.",
      ""
    }

    bool cfg-create|create
    {
      "<dir>",
      "Create configuration.",
      ""
    }

    bool cfg-add|add
    {
      "<rep>",
      "Add repository to configuration.",
      ""
    }

    bool cfg-fetch|fetch
    {
      "",
      "Fetch list of available packages.",
      ""
    }

    bool pkg-status|status
    {
      "<pkg>",
      "Print package status.",
      ""
    }

    bool pkg-build|build
    {
      "<pkg>",
      "Build package(s) \- \l{bpkg-pkg-build(1)}.",
      ""
    }

    bool pkg-drop|drop
    {
      "<pkg>",
      "Drop package(s).",
      ""
    }

    bool pkg-update|update
    {
      "<pkg>",
      "Update package.",
      ""
    }

    bool pkg-clean|clean
    {
      "<pkg>",
      "Clean package.",
      ""
    }

    bool pkg-verify
    {
      "<archive>",
      "Verify archive is a valid package.",
      ""
    }

    bool pkg-fetch
    {
      "<pkg>/<ver>",
      "Fetch package archive.",
      ""
    }

    bool pkg-unpack
    {
      "<pkg>",
      "Unpack package archive.",
      ""
    }

    bool pkg-configure
    {
      "<pkg>",
      "Configure package.",
      ""
    }

    bool pkg-disfigure
    {
      "<pkg>",
      "Disfigure package.",
      ""
    }

    bool pkg-purge
    {
      "<pkg>",
      "Purge package.",
      ""
    }

    bool rep-info
    {
      "<rep>",
      "Print information about repository.",
      ""
    }

    bool rep-create
    {
      "[<dir>]",
      "Generate repository packages manifest.",
      ""
    }
  };

  // Make sure these don't conflict with command names above.
  //
  class topics
  {
    "\h|HELP TOPICS|"

    bool common-options
    {
      "Details on common options \- \l{bpkg-common-options(1)}."
    }
  };

  class options: common_options
  {
    bool --help;
    bool --version;
  };
}
