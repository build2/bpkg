// file      : bpkg/pkg-unpack.cli
// copyright : Copyright (c) 2014-2017 Code Synthesis Ltd
// license   : MIT; see accompanying LICENSE file

include <bpkg/configuration.cli>;

"\section=1"
"\name=bpkg-pkg-unpack"
"\summary=unpack package archive"

namespace bpkg
{
  {
    "<options> <pkg> <dir>",

    "\h|SYNOPSIS|

     \c{\b{bpkg pkg-unpack} [<options>] <pkg> | (-e <dir>)}

     \h|DESCRIPTION|

     The \cb{pkg-unpack} command unpacks the archive for the previously
     fetched (\l{bpkg-pkg-fetch(1)}) package. The resulting package state is
     \cb{unpacked} (\l{bpkg-pkg-status(1)}).

     If the \cb{--existing|-e} option is used, then instead of the package
     name, \cb{pkg-unpack} expects a local path to an existing package
     directory. In this case, \cb{bpkg} will use the directory in place,
     without copying it to the configuration or package cache directories.
     Also, unless the \cb{--purge|-p} option is specified, \cb{bpkg} will not
     attempt to remove this directory when the package is later purged with
     the \l{bpkg-pkg-purge(1)} command.

     If \cb{--existing|-e} is specified together with the \cb{--replace|-r}
     option, then \cb{pkg-unpack} will replace the archive and/or source
     directory of a package that is already in the \cb{unpacked} or
     \cb{fetched} state."
  }

  class pkg_unpack_options: configuration_options
  {
    "\h|PKG-UNPACK OPTIONS|"

    bool --existing|-e
    {
      "Treat the argument as an existing package directory path rather than
       the package name to unpack."
    }

    bool --purge|-p
    {
      "Remove the existing package directory when the package is purged."
    }

    bool --replace|-r
    {
      "Replace the source directory if the package is already unpacked or
       fetched. Can only be specified together with \cb{--existing|-e}."
    }
  };
}
